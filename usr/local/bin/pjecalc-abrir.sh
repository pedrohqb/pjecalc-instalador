#!/bin/bash
#
# Autores:
#
#   Bruno Goncalves <bigbruno@gmail.com>
#   Fernando Souza - https://www.youtube.com/@fernandosuporte/
#   Modificado por Pedro Henrique Quitete Barreto - pedrohqb@gmail.com
#   Homepage: https://github.com/pedrohqb/pjecalc-instalador
#   Licen√ßa:  MIT

logo="/usr/share/pixmaps/icone_calc.ico"


# Vers√µes de limite do Java

VERSAO_MINIMA="11.0.25"

VERSAO_MAXIMA="24.0.1"


# Porta

porta="9257"


# Logs de execu√ß√£o

log="/tmp/pjecalc.log"


clear


# Remove o arquivo de log

rm -Rf "$log" 2>/dev/null


# ----------------------------------------------------------------------------------------

# Garantir que o shell use a codifica√ß√£o correta no in√≠cio do script.

export LANG=pt_BR.UTF-8

export LC_ALL=pt_BR.UTF-8

# ----------------------------------------------------------------------------------------


INICIO=$(echo "=========== $(date '+%d-%m-%Y %H:%M:%S') - In√≠cio da execu√ß√£o do PJeCalc Cidad√£o ==========")

echo  "

$INICIO

" >> "$log"


# ----------------------------------------------------------------------------------------

# Para verificar se os programas est√£o instalados


which yad           1> /dev/null 2> /dev/null || { echo "Programa Yad n√£o esta instalado."      ; exit ; }


verificar_programa() {

    if ! which "$1" &> /dev/null; then


        echo  "O programa $1 n√£o est√° instalado." >> "$log"

        yad --center \
            --title="Depend√™ncia ausente" \
            --window-icon="$logo" --image="$logo" \
            --text="O programa <b>$1</b> n√£o est√° instalado.\n\nInstale-o antes de continuar." \
            --buttons-layout="center" \
            --button="OK" \
            --width="400" 2> /dev/null

        exit 1
    fi

}


# Verifica√ß√µes

verificar_programa notify-send
verificar_programa grep
verificar_programa curl
verificar_programa 7z
verificar_programa cut
verificar_programa java
verificar_programa wget
verificar_programa cp
verificar_programa ping
verificar_programa pgrep
verificar_programa sort
verificar_programa xdg-open
verificar_programa firefox
verificar_programa netstat
verificar_programa find
verificar_programa iconv
verificar_programa sed


# find /usr/share/icons/ -iname *gtk-dialog*


# ----------------------------------------------------------------------------------------

# Verifica√ß√£o autom√°tica do Java


verifica_java(){

# Tenta encontrar Java na pasta /usr/lib/jvm

jvm_base="/usr/lib/jvm"

java_dir=$(ls "$jvm_base" 2>/dev/null | grep openjdk | head -n1)

if [ -n "$java_dir" ] && [ -x "$jvm_base/$java_dir/bin/java" ]; then

    JAVA_PATH="$jvm_base/$java_dir/bin/java"

else

    # Caso falhe, tenta descobrir via which + readlink

    java_bin=$(which java 2>/dev/null)

    if [ -n "$java_bin" ]; then

        JAVA_PATH=$(readlink -f "$java_bin")

    fi
fi


}


verifica_java


# Verifica se encontrou

if [ -x "$JAVA_PATH" ]; then

    echo -e "\nJava encontrado em: $JAVA_PATH \n\n"

else

    yad --center \
        --title="Erro ao localizar Java" \
        --window-icon=dialog-warning \
        --image="$logo" \
        --text="N√£o foi poss√≠vel localizar uma instala√ß√£o v√°lida do Java." \
        --buttons-layout="center" \
        --button="OK" --width="300"

    exit 1
fi


# Agora voc√™ pode usar $JAVA_PATH normalmente:

"$JAVA_PATH" -version | tee -a "$log"


# ----------------------------------------------------------------------------------------


# Verificando se o caminho existe antes de usar:

if [ -x "$JAVA_PATH" ]; then

    java="$JAVA_PATH"

else

    yad --center --title="Erro" --window-icon=dialog-warning --image="$logo" --text="Java n√£o encontrado em $JAVA_PATH" --buttons-layout="center" --button="OK"  2>/dev/null

    exit 1

fi


# ----------------------------------------------------------------------------------------


# Fun√ß√£o para converter vers√£o em n√∫mero compar√°vel

versao_para_numero() {

    echo "$1" | awk -F. '{ printf("%02d%02d%02d\n", $1, $2, $3) }'

}


# Verifica se Java est√° dispon√≠vel

if ! command -v "$JAVA_PATH" &> /dev/null; then
    echo "‚ùå Java n√£o encontrado no PATH."
    exit 1
fi

# Captura a vers√£o do Java

JAVA_VERSION_RAW=$("$JAVA_PATH" -version 2>&1 | awk -F\" '/version/ { print $2 }')

# Verifica se conseguiu pegar a vers√£o

if [ -z "$JAVA_VERSION_RAW" ]; then

    echo "‚ùå N√£o foi poss√≠vel detectar a vers√£o do Java."

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "‚ùå N√£o foi poss√≠vel detectar a vers√£o do Java."

    exit 1
fi

echo "üîç Vers√£o do Java detectada: $JAVA_VERSION_RAW"

# notify-send "PJeCalc Cidad√£o" "üîç Vers√£o do Java detectada: $JAVA_VERSION_RAW"


# Converte para formato num√©rico

JAVA_NUM=$(versao_para_numero "$JAVA_VERSION_RAW")
MIN_NUM=$(versao_para_numero "$VERSAO_MINIMA")
MAX_NUM=$(versao_para_numero "$VERSAO_MAXIMA")

# Compara vers√µes

if [ "$JAVA_NUM" -lt "$MIN_NUM" ]; then

    echo "‚ùå Vers√£o do Java menor que a m√≠nima exigida ($VERSAO_MINIMA)."

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "‚ùå Java menor que a vers√£o m√≠nima exigida ($VERSAO_MINIMA)."

    exit 1

elif [ "$JAVA_NUM" -ge "$MAX_NUM" ]; then

    echo "‚ùå Vers√£o do Java maior ou igual √† m√°xima permitida ($VERSAO_MAXIMA)."

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "‚ùå Java maior ou igual √† vers√£o m√°xima permitida ($VERSAO_MAXIMA)."

    exit 1

else

    echo "‚úÖ Vers√£o do Java √© compat√≠vel com o PJeCalc Cidad√£o."

    notify-send "PJeCalc Cidad√£o" -i "$logo" "‚úÖ Vers√£o do Java √© compat√≠vel. Iniciando o programa..."

    echo "üöÄ Iniciando o programa..."

fi


# ----------------------------------------------------------------------------------------


if ! [ -e "$HOME/PjeCalc/bin/pjecalc.jar" ]; then


yad --center \
    --title="PJeCalc Cidad√£o n√£o instalado!" \
    --window-icon=dialog-warning --image="$logo" \
    --text="O PJeCalc Cidad√£o ainda n√£o est√° instalado." \
    --buttons-layout="center" \
    --button="OK" \
    --width="400" \
    2>/dev/null

    clear

    exit 1

fi


# ----------------------------------------------------------------------------------------


# Verificar acesso a pasta $HOME/PjeCalc

verificar_acesso(){


PASTA="$HOME/PjeCalc"

# Cores
VERDE="\033[0;32m"
VERMELHO="\033[0;31m"
AMARELO="\033[1;33m"
RESET="\033[0m"

# Verifica se a pasta existe

if [ ! -d "$PASTA" ]; then

    echo -e "${VERMELHO}‚ùå Pasta n√£o encontrada: $PASTA${RESET}"

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\nPasta n√£o encontrada: $PASTA\n"

    exit 1
fi

# Verifica permiss√µes na pasta

if [ -r "$PASTA" ] && [ -w "$PASTA" ]; then

    echo -e "${VERDE}‚úÖ Voc√™ tem permiss√£o de leitura e escrita na pasta: $PASTA${RESET}"

else

    echo -e "${AMARELO}‚ö†Ô∏è  Sem permiss√£o total na pasta: $PASTA${RESET}"

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\nSem permiss√£o total na pasta: $PASTA\n"

fi


}


verificar_acesso


# ----------------------------------------------------------------------------------------


# Mensagem sobre o arquivo de log


echo "

O que √© PJeCalc Cidad√£o?

O PJe-Calc Cidad√£o √© o sistema desenvolvido pela Secretaria de Tecnologia da Informa√ß√£o do Tribunal Regional do Trabalho 
da 8¬™ Regi√£o (PA/AP), a pedido do Conselho Superior da Justi√ßa do Trabalho (CSJT), para utiliza√ß√£o em toda a Justi√ßa do Trabalho 
como ferramenta padr√£o de elabora√ß√£o de c√°lculos trabalhistas e liquida√ß√£o de senten√ßas, visando √† uniformidade de procedimentos 
e √† confiabilidade nos resultados apurados.



O arquivo de log ser√° criado em:

$log

Ele ser√° respons√°vel por identificar poss√≠veis problemas com o programa PJeCalc Cidad√£o.

Em caso de erro, o arquivo de log dever√° ser enviado para an√°lise.

----------------------------------------------------
PJe Office + PJeCalc Cidad√£o + Navegador = Tudo se conecta.
----------------------------------------------------


Obs: Oficialmente o PJeCalc Cidad√£o √© compat√≠vel apenas com o Firefox - pelo menos quando integrado com o PJe Office e o sistema de c√°lculo da 
Justi√ßa do Trabalho.

O PJeCalc Cidad√£o em si √© uma aplica√ß√£o Java independente, usada para fazer c√°lculos trabalhistas e gerar documentos. No entanto, ele frequentemente 
depende do PJe Office, que √© o m√≥dulo de autentica√ß√£o com certificado digital, necess√°rio para funcionar em conjunto com o sistema PJe 
(Processo Judicial Eletr√¥nico).

Por que Firefox?

   - O PJeCalc Cidad√£o √© homologado oficialmente s√≥ para o Firefox.

   - O Firefox ainda permite (em parte) o uso de integra√ß√µes por socket (ex: via localhost:9999) que outros navegadores como Chrome e Edge 
bloqueiam ou restringem.

   - Os tribunais, como o TRT, normalmente s√≥ testam e d√£o suporte oficial ao Firefox.

   
Obs: A funcionalidade de importa√ß√£o de arquivos locais n√£o abre no gerenciador de arquivo do KDE (Dolphin) no Firefox 128.9.0 ESR (64 bits). Ao tentar importar um arquivo, o processo n√£o √© iniciado. No entanto, a mesma funcionalidade funciona normalmente ao utilizar o navegador Brave (vers√£o 1.62.165 - Chromium: 121.0.6167.184, 64 bits)  n√£o foi testado em outros navegadores baseados no Chromium.

Obs: O Pje-Calc Cidad√£o usa Firefox Portable vers√£o 55.0.2 no Windows.


E se usar outro navegador?

   - Pode at√© conseguir abrir o PJeCalc Cidad√£o.

   - Mas a comunica√ß√£o com o PJe Office e a assinatura digital geralmente n√£o funciona.

   - Vai falhar na hora de validar certificado, assinar documentos ou transmitir os dados de volta ao sistema PJe.

Se voc√™ quiser rodar o PJeCalc Cidad√£o de forma offline, sem liga√ß√£o com navegador ou certificado, a√≠ qualquer navegador serve ‚Äî ou nenhum! S√≥ o Java.


O que funciona no modo offline:

‚úîÔ∏è Criar c√°lculos
‚úîÔ∏è Gerar PDFs
‚úîÔ∏è Exportar XML
‚úîÔ∏è Ver hist√≥ricos
‚ùå Assinar com certificado digital (sem PJe Office)
‚ùå Enviar para o sistema PJe automaticamente



Consultar o suporte t√©cnico: 

Se o problema persistir, √© aconselh√°vel entrar em contato com o suporte t√©cnico do PJe-Calc Cidad√£o ou 
com o setor de tecnologia da informa√ß√£o do TRT da sua regi√£o para assist√™ncia adicional.


" \
| yad \
--center \
--title="Sobre o PJe-Calc" \
--image="$logo" \
--window-icon=dialog-warning \
--text-info \
--buttons-layout="center" \
--button=OK:0 \
--width="1200" \
--height="800" \
2>/dev/null



# https://pjecalccalculos.com.br/


# ----------------------------------------------------------------------------------------


# Verificar se o Firefox esta instalado.

if command -v firefox > /dev/null 2>&1; then


# ----------------------------------------------------------------------------------------


# Vamos matar o Firefox se ele estiver aberto.

if pgrep -x firefox > /dev/null; then


    echo -e "\033[1;31m\n[ERRO] - ‚ùå Firefox est√° rodando. Matando o processo... \n\033[0m"

    yad --center --title="Encerrando Firefox" \
        --text="O Firefox est√° em execu√ß√£o e ser√° encerrado para abrir o PJeCalc Cidad√£o." \
        --image=dialog-warning --buttons-layout="center" --button="OK" --width="700" 2>/dev/null

    pkill -x firefox


else

    echo -e "\033[1;32m\nFirefox n√£o est√° em execu√ß√£o.... \n\033[0m"

fi


# ----------------------------------------------------------------------------------------


    echo -e "\033[1;32m\nFirefox encontrado. Abrindo PJeCalc Cidad√£o... \n\033[0m"
    
else

    echo -e "\033[1;31m[ERRO] - ‚ùå Firefox n√£o est√° instalado para abrir o PJeCalc Cidad√£o.\n\nPor favor, instale. \033[0m"

        yad \
        --center \
        --title="Firefox n√£o encontrado" \
        --window-icon=dialog-warning \
        --text="‚ùå O navegador Firefox n√£o est√° instalado para abrir o PJeCalc Cidad√£o.\n\nPor favor, instale-o <b>usando o gerenciador de pacotes da sua distribui√ß√£o Linux.</b>" \
        --buttons-layout="center" \
        --button="OK" \
        --width="640" \
        2>/dev/null




    exit 1

fi


# ----------------------------------------------------------------------------------------


# Para finalizar o processo associado ao pjecalc.jar.

pkill -f pjecalc.jar 2>/dev/null

sleep 1


# ----------------------------------------------------------------------------------------


# Verifica se a porta est√° em uso.

OCUPADA=$(netstat -tuln 2>/dev/null | grep ":$porta ")

if [ -n "$OCUPADA" ]; then

    echo -e "\033[1;31m\n‚ö†Ô∏è  A porta $porta est√° em uso:\n$OCUPADA \n \033[0m"

    yad --center --window-icon=dialog-warning --image="$logo" --title="PJeCalc Cidad√£o" --text="\nA porta $porta est√° em uso:\n$OCUPADA \n" --buttons-layout="center" --button="OK" --width="500" 2>/dev/null


    # Descobre o PID usando a porta.

    PID=$(fuser $porta/tcp 2>/dev/null)

    if [ -n "$PID" ]; then

        echo -e "\033[1;31m\nüîç Processo usando a porta: PID $PID \n \033[0m"


        # Di√°logo com yad para confirma√ß√£o

        yad \
            --center \
            --title="Porta em Uso" \
            --text="‚ö†Ô∏è A porta $porta est√° em uso pelo processo PID $PID.\n\nDeseja finalizar esse processo?" \
            --buttons-layout="center" \
            --button="Finalizar Processo:0" --button="Cancelar:1" \
            --width="500" \
            --height="200" \
            2>/dev/null


        # Verifica o c√≥digo de sa√≠da do yad (0 = bot√£o 1 foi clicado)

        if [ $? -eq 0 ]; then

            # kill -9 $PID 2>/dev/null

            killall -9 $PID 2>/dev/null

            # yad --center --info --title="Sucesso" --text="‚úÖ Processo $PID que estava usando a porta $porta foi finalizado com sucesso." --buttons-layout="center" --button="OK" 2>/dev/null

            notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\n‚úÖ Processo $PID que estava usando a porta $porta foi finalizado com sucesso.\n"

        else

            yad --center --info --title="Cancelado" --text="‚ÑπÔ∏è Processo $PID n√£o foi finalizado." --buttons-layout="center" --button="OK" --width="300" 2>/dev/null

        fi

    else

        # yad --center --warning --title="Erro" --text="‚ùå N√£o foi poss√≠vel identificar o processo com fuser." --buttons-layout="center" --button="OK" --width="400" 2>/dev/null

        notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\n‚ùå N√£o foi poss√≠vel identificar o processo com fuser.\n"


    fi

else

    # yad --center --info --title="Porta Livre" --text="‚úÖ A porta $porta est√° livre." --buttons-layout="center" --button="OK" --width="300" 2>/dev/null

    notify-send "Porta Livre" -i "$logo" -t 100000 "\n‚úÖ A porta $porta est√° livre para ser usada no PJeCalc Cidad√£o...\n"
fi


# Fonte:

# https://www.trt8.jus.br/pjecalc-cidadao/perguntas-frequentes-duvidas-tecnicas



# ----------------------------------------------------------------------------------------


cd "$HOME/PjeCalc/" 2>> "$log" || exit


# Esse trecho do script est√° verificando se o pjecalc.jar n√£o est√° rodando. Se n√£o estiver, ele inicia o programa usando Java.

# https://www.youtube.com/watch?v=GIqSTTuOBwM


if [ "$(ps -aux | grep -i pjecalc.jar | grep java)" = "" ]; then


    # Iniciar o PJeCalc Cidad√£o

    echo -e "\033[1;32m\nIniciando o PJeCalc Cidad√£o... \n\033[0m"

    echo "
Iniciando o PJeCalc Cidad√£o...

" >> "$log"



   # exec "$JAVA_PATH" -Duser.timezone=GMT-3 -Dfile.encoding=ISO-8859-1 -Dseguranca.pjecalc.tokenServicos=pW4jZ4g9VM5MCy6FnB5pEfQe -Xms1024m -Xmx2048m -XX:MaxPermSize=512m -jar bin/pjecalc.jar  2>> "$log" &


   # Redirecionamento de erros (tudo (stdout + stderr) v√° para o log)

  exec "$JAVA_PATH" \
  -splash:pjecalc_splash.gif \
  -Duser.timezone=GMT-3 \
  -Dfile.encoding=ISO-8859-1 \
  -Dseguranca.pjecalc.tokenServicos=pW4jZ4g9VM5MCy6FnB5pEfQe \
  -Dseguranca.pjekz.servico.contexto="https://pje.trtXX.jus.br/pje-seguranca" \
  -Xms1024m \
  -Xmx2048m \
  -jar bin/pjecalc.jar 2>> "$log" &


# ----------------------------------------------------------------------------------------


fi


ESPERAR=1

while [  $ESPERAR = 1 ]; do

    curl http://localhost:$porta/pjecalc 2> /dev/null

    if [ "$?" = 0 ]; then

        ESPERAR=0


        # O PJe Office √© homologado oficialmente s√≥ para o Firefox.

        exec firefox http://localhost:$porta/pjecalc 2>> "$log" &

    fi

    sleep 1

done


# ----------------------------------------------------------------------------------------


# Verificar se a porta 9257 no localhost est√° aberta e ouvindo (ou seja, se o programa no http://localhost:9257 est√° ativo).


if curl -s --head http://localhost:$porta | grep "HTTP/" ; then


    echo -e "\nO programa est√° ativo na porta $porta.\n"


else


    echo -e "\033[1;31m\n‚ùå A porta $porta n√£o est√° respondendo como esperado.\n \033[0m"

    yad --center --title="PJeCalc Cidad√£o" --window-icon=dialog-warning --image="$logo" --text="O PJeCalc Cidad√£o n√£o est√° acess√≠vel em http://localhost:$porta \n\nVerifique se ele est√° em execu√ß√£o." --buttons-layout="center"  --button="OK" --width="500" 2>/dev/null
    
    
fi


# ----------------------------------------------------------------------------------------


# Arquivo compactado de tabelas auxiliares


ARQUIVO_IDC=$(find "$HOME/PjeCalc/" -type f -iname "*.IDC" 2>/dev/null)

if [ -n "$ARQUIVO_IDC" ]; then

    echo -e "\033[1;32m\n‚úÖ Arquivo(s) .IDC encontrado(s): \n\033[0m"

    echo "$ARQUIVO_IDC"

else

    echo -e "\033[1;31m\n‚ùå Nenhum arquivo .IDC encontrado em $HOME/PjeCalc/ \n\nhttps://www.trt8.jus.br/pjecalc-cidadao/tabelas-auxiliares-trt8 \n\033[0m"

    notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\n‚ùå Nenhum arquivo .IDC encontrado em $HOME/PjeCalc/ \n\nhttps://www.trt8.jus.br/pjecalc-cidadao/tabelas-auxiliares-trt8 \n"


fi


# ----------------------------------------------------------------------------------------


notify-send "PJeCalc Cidad√£o" -i "$logo" -t 100000 "\nEm caso de problemas, verifique o arquivo de log: $log. \n\nA documenta√ß√£o de ajuda em formato PDF encontra-se na pasta /usr/share/doc/pjecalc-instalador/"


# ----------------------------------------------------------------------------------------


# Converter o arquivo pjecalc.log para UTF-8 sem gerar um novo arquivo

iconv -f ISO-8859-1 -t UTF-8 /tmp/pjecalc.log -o /tmp/pjecalc-temp.log && mv /tmp/pjecalc-temp.log /tmp/pjecalc.log


sed -i "s/^==========.*/$INICIO/g" "$log"


# ----------------------------------------------------------------------------------------


exit 0
